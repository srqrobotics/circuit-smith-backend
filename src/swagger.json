{
  "openapi": "3.0.0",
  "info": {
    "title": "Circuit Smith API",
    "version": "1.0.0",
    "description": "API for Circuit Smith electronics component management"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "User unique identifier"
          },
          "fullName": {
            "type": "string",
            "description": "User's full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Account creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": ["fullName", "email"]
      },
      "UserSignup": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100,
            "description": "User's full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 255,
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "maxLength": 128,
            "description": "User's password"
          }
        },
        "required": ["fullName", "email", "password"]
      },
      "UserSignin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          }
        },
        "required": ["email", "password"]
      }
    },
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "token"
      }
    }
  },
  "paths": {
    "/api/users/signup": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or user already exists"
          }
        }
      }
    },
    "/api/users/signin": {
      "post": {
        "summary": "Sign in user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signed in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/users/validate": {
      "get": {
        "summary": "Validate user token",
        "tags": ["Authentication"],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token is valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing token"
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "summary": "Logout user",
        "tags": ["Authentication"],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/auth/google": {
      "get": {
        "summary": "Initiate Google OAuth authentication",
        "tags": ["Authentication"],
        "description": "Redirects to Google OAuth consent screen",
        "responses": {
          "302": {
            "description": "Redirect to Google OAuth"
          }
        }
      }
    },
    "/api/users/auth/google/callback": {
      "get": {
        "summary": "Google OAuth callback",
        "tags": ["Authentication"],
        "description": "Handles Google OAuth callback and sets authentication cookie",
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "schema": {
              "type": "string"
            },
            "description": "Authorization code from Google"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to frontend on success/failure"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication endpoints"
    }
  ]
}
